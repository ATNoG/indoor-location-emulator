!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("mapbox-gl")):"function"==typeof define&&define.amd?define(["exports","mapbox-gl"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).mapgl_indoor={},e.mapboxgl)}(this,(function(e,t){"use strict";function i(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var o=i(t);class r{constructor(e){this._onMapLoaded=({indoorMap:e})=>{this._indoorMap=e,this._updateNavigationBar(),this._setSelected(this._indoor.getLevel())},this._onMapUnLoaded=()=>{this._indoorMap=null,this._updateNavigationBar()},this._onLevelChanged=({level:e})=>this._setSelected(e),this._indoor=e,this._levelsButtons=[],this._container=null,this._selectedButton=null}onAdd(e){return this._map=e,this._container=document.createElement("div"),this._container.classList.add("mapboxgl-ctrl"),this._container.classList.add("mapboxgl-ctrl-group"),this._container.style.display="none",this._container.addEventListener("contextmenu",this._onContextMenu),this._indoorMap=this._indoor.getSelectedMap(),null!==this._indoor.getSelectedMap()&&(this._updateNavigationBar(),this._setSelected(this._indoor.getLevel())),this._map.on("indoor.map.loaded",this._onMapLoaded),this._map.on("indoor.map.unloaded",this._onMapUnLoaded),this._map.on("indoor.level.changed",this._onLevelChanged),this._container}onRemove(){this._container.remove(),this._container=null,this._map.off("indoor.map.loaded",this._onMapLoaded),this._map.off("indoor.map.unloaded",this._onMapUnLoaded),this._map.off("indoor.level.changed",this._onLevelChanged)}_updateNavigationBar(){if(null===this._container)return;if(null===this._indoorMap)return void(this._container.style.display="none");for(this._container.style.display="block",this._levelsButtons=[];this._container.firstChild;)this._container.removeChild(this._container.firstChild);const e=this._indoorMap.levelsRange;for(let t=e.max;t>=e.min;t--)this._levelsButtons[t]=this._createLevelButton(this._container,t)}_setSelected(e){0!==this._levelsButtons.length&&(this._selectedButton&&(this._selectedButton.style.fontWeight="normal"),null!==e&&this._levelsButtons[e]&&(this._levelsButtons[e].style.fontWeight="bold",this._selectedButton=this._levelsButtons[e]))}_createLevelButton(e,t){const i=document.createElement("button");return i.innerHTML=t.toString(),i.classList.add("mapboxgl-ctrl-icon"),e.appendChild(i),i.addEventListener("click",()=>{this._map.fire("indoor.control.clicked",{level:t}),this._indoor.getLevel()!==t&&this._indoor.setLevel(t)}),i}_onContextMenu(e){e.preventDefault()}}const n=6371008.8;function a(e,i,o){const r=i/n,a=Math.cos(r),s=Math.sin(r),l=e.lat/180*Math.PI,d=e.lng/180*Math.PI,u=Math.asin(Math.sin(l)*a+Math.cos(l)*s*Math.cos(o)),c=d+Math.atan2(Math.sin(o)*s*Math.cos(l),a-Math.sin(l)*Math.sin(u));return new t.LngLat(180*c/Math.PI,180*u/Math.PI)}function s(e,t){const i=e.lat/180*Math.PI,o=e.lng/180*Math.PI,r=t.lat/180*Math.PI,a=r-i,s=t.lng/180*Math.PI-o,l=Math.sin(a/2)**2+Math.cos(i)*Math.cos(r)*Math.sin(s/2)**2,d=Math.sqrt(l),u=Math.sqrt(1-l),c=2*Math.atan2(d,u);return n*c}const l="indoor";class d{constructor(e){this._map=e,this._level=null,this._indoorMaps=[],this._savedFilters=[],this._selectedMap=null,this._previousSelectedMap=null,this._previousSelectedLevel=null,this._mapLoaded=!1,this._updateMapPromise=Promise.resolve(),this._control=new r(this),this._map.loaded()?this._mapLoaded=!0:this._map.on("load",()=>{this._mapLoaded=!0,this._updateSelectedMapIfNeeded()}),this._map.on("moveend",()=>this._updateSelectedMapIfNeeded())}getSelectedMap(){return this._selectedMap}getLevel(){return this._level}setLevel(e,t=!0){if(null===this._selectedMap)throw new Error("Cannot set level, no map has been selected");this._level=e,this._updateFiltering(),t&&this._map.fire("indoor.level.changed",{level:e})}get control(){return this._control}_addLayerForFiltering(e,t){this._map.addLayer(e,t),this._savedFilters.push({layerId:e.id,filter:this._map.getFilter(e.id)||["all"]})}_removeLayerForFiltering(e){this._savedFilters=this._savedFilters.filter(({layerId:t})=>e!==t),this._map.removeLayer(e)}_updateFiltering(){const e=this._level;let t;if(null!==e){const i=!!this._selectedMap&&this._selectedMap.showFeaturesWithEmptyLevel;t=t=>function(e,t,i=!1){return["all",e,["any",!!i&&["!",["has","level"]],["all",["has","level"],["any",["==",["get","level"],t.toString()],["all",["!=",["index-of",";",["get","level"]],-1],[">=",t,["to-number",["slice",["get","level"],0,["index-of",";",["get","level"]]]]],["<=",t,["to-number",["slice",["get","level"],["+",["index-of",";",["get","level"]],1]]]]]]]]]}(t,e,i)}else t=e=>e;this._savedFilters.forEach(({layerId:e,filter:i})=>this._map.setFilter(e,t(i)))}addMap(e){this._indoorMaps.push(e),this._updateSelectedMapIfNeeded()}removeMap(e){this._indoorMaps=this._indoorMaps.filter(t=>t!==e),this._updateSelectedMapIfNeeded()}async _updateSelectedMapIfNeeded(){this._mapLoaded&&(await this._updateMapPromise,this._updateMapPromise=(async()=>{const e=this._closestMap();e!==this._selectedMap&&this._updateSelectedMap(e)})())}_updateSelectedMap(e){const t=this._selectedMap;if(null!==t&&(t.layersToHide.forEach(e=>this._map.setLayoutProperty(e,"visibility","visible")),t.layers.forEach(({id:e})=>this._removeLayerForFiltering(e)),this._map.removeSource(l),e||(this._previousSelectedLevel=this._level,this._previousSelectedMap=t),this.setLevel(null,!1),this._map.fire("indoor.map.unloaded",{indoorMap:t})),this._selectedMap=e,!e)return;const{geojson:i,layers:o,levelsRange:r,beforeLayerId:n}=e;this._map.addSource(l,{type:"geojson",data:i}),o.forEach(e=>this._addLayerForFiltering(e,n)),e.layersToHide.forEach(e=>this._map.setLayoutProperty(e,"visibility","none"));const a=this._previousSelectedMap===e?this._previousSelectedLevel:Math.max(Math.min(e.defaultLevel,r.max),r.min);this.setLevel(a,!1),this._map.fire("indoor.map.loaded",{indoorMap:e})}_closestMap(){if(this._map.getZoom()<17)return null;const e=this._map.getBounds(),t=this._indoorMaps.filter(t=>{return i=t.bounds,o=e,!(i.getWest()>o.getEast()||o.getWest()>i.getEast()||i.getNorth()<o.getSouth()||o.getNorth()<i.getSouth());var i,o});if(0===t.length)return null;if(1===t.length)return t[0];let i=Number.POSITIVE_INFINITY,o=t[0];for(const r of t){const t=s(r.bounds.getCenter(),e.getCenter());t<i&&(o=r,i=t)}return o}}let u=[{filter:["any",["has","building"],["has","building:part"]],id:"buildings-background",type:"fill",source:"indoor",paint:{"fill-color":"#DCD9D6","fill-opacity":{base:1,stops:[[16.5,0],[18,1]]}}},{filter:["filter-==","indoor","level"],id:"level-background",type:"fill",source:"indoor",paint:{"fill-color":"#DCD9D6","fill-opacity":{base:1,stops:[[16.5,0],[18,1]]}}},{id:"indoor-gardens",type:"fill",source:"indoor",filter:["filter-==","leisure","garden"],layout:{visibility:"visible"},paint:{"fill-color":"#cde8a2","fill-opacity":{base:1,stops:[[17,0],[18,1]]}}},{filter:["filter-==","amenity","parking"],id:"indoor-parkings",type:"fill",source:"indoor",paint:{"fill-color":"#D7CCC8","fill-outline-color":"#000000","fill-opacity":{base:1,stops:[[17,0],[18,1]]}}},{filter:["filter-==","amenity","parking"],id:"indoor-parkings-patterns",type:"fill",source:"indoor",paint:{"fill-opacity":{base:1,stops:[[17,0],[18,.1]]},"fill-pattern":"si-main-3","fill-translate-anchor":"viewport"}},{filter:["filter-==","indoor","corridor"],id:"indoor-corridors",type:"fill",source:"indoor",paint:{"fill-color":"#D7CCC8","fill-opacity":{base:1,stops:[[17,0],[18,1]]}}},{filter:["filter-==","indoor","room"],id:"indoor-rooms",type:"fill",source:"indoor",paint:{"fill-color":"#A1887F","fill-opacity":{base:1,stops:[[17,0],[18,1]]}}},{filter:["any",["filter-==","indoor","room"],["filter-==","indoor","area"]],id:"indoor-rooms-borders",type:"line",source:"indoor",paint:{"line-color":"#000","line-width":1,"line-opacity":{base:1,stops:[[17,0],[18,1]]}}},{filter:["filter-==","indoor","area"],id:"indoor-areas",type:"fill",source:"indoor",paint:{"fill-color":"#D7CCC8","fill-opacity":{base:1,stops:[[17,0],[18,1]]}}},{filter:["all",["filter-==","indoor","area"],["filter-==","balcony","yes"]],id:"indoor-balcony",type:"fill",source:"indoor",paint:{"fill-color":"#BDBDBD","fill-opacity":{base:1,stops:[[17,0],[18,1]]}}},{filter:["any",["filter-==","stairs","yes"],["filter-==","elevator","yes"]],id:"indoor-stairs",type:"fill",source:"indoor",paint:{"fill-color":"#7B635A","fill-outline-color":"#000000","fill-opacity":{base:1,stops:[[17,0],[18,1]]}}},{filter:["filter-==","indoor","wall"],id:"indoor-walls",type:"line",source:"indoor",paint:{"line-color":"#000000","line-opacity":{base:1,stops:[[17,0],[18,1]]}}},{filter:["has","barrier"],id:"indoor-barriers",type:"line",source:"indoor",paint:{"line-color":"#000000","line-opacity":{base:1,stops:[[17,0],[18,1]]}}},{filter:["filter-==","indoor","block"],id:"indoor-blocks",type:"fill",source:"indoor",paint:{"fill-color":"#000000","fill-opacity":{base:1,stops:[[17,0],[18,1]]}}},{filter:["filter-==","handrail","yes"],id:"indoor-handrail",type:"line",source:"indoor",paint:{"line-color":"#000000","line-opacity":{base:1,stops:[[17,0],[19,1]]}}},{filter:["any",["filter-in-small","indoor",["literal",["table","cupboard","chair","kitchen","sofa","tv","shelf","furniture-item"]]],["filter-==","trashcan","yes"],["filter-==","copier","yes"]],id:"indoor-furniture",type:"fill",source:"indoor",paint:{"fill-color":"#000","fill-outline-color":"#000","fill-opacity":{base:1,stops:[[18,0],[19,.2]]}}},{filter:["filter-==","indoor","level"],id:"level",type:"line",source:"indoor",paint:{"line-color":"#000000","line-width":{base:2,stops:[[16.5,0],[18,2]]},"line-opacity":{base:1,stops:[[16.5,0],[18,1]]}}},{id:"indoor-steps",paint:{"line-width":{base:1.5,stops:[[15,1],[16,1.6],[18,6]]},"line-color":"hsl(0, 0%, 100%)","line-dasharray":{base:1,stops:[[14,[1,0]],[15,[1.75,1]],[16,[1,.75]],[17,[.3,.3]]]},"line-opacity":{base:1,stops:[[14,0],[14.25,1]]}},type:"line",source:"indoor",filter:["all",["filter-==","highway","steps"],["!",["has","conveying"]]],layout:{"line-join":"round"}},{id:"indoor-conveying",paint:{"line-width":{base:1.5,stops:[[15,1],[16,1.6],[18,6]]},"line-color":"#FF0000","line-dasharray":{base:1,stops:[[14,[1,0]],[15,[1.75,1]],[16,[1,.75]],[17,[.3,.3]]]},"line-opacity":{base:1,stops:[[14,0],[14.25,1]]}},type:"line",source:"indoor",filter:["all",["filter-==","highway","steps"],["has","conveying"]],layout:{"line-join":"round"}},{interactive:!0,minzoom:17,layout:{"text-line-height":1.2,"text-size":{base:1,stops:[[17,10],[20,12]]},"text-allow-overlap":!1,"text-ignore-placement":!1,"text-max-angle":38,"text-font":["DIN Offc Pro Medium","Arial Unicode MS Regular"],"symbol-placement":"point","text-padding":2,visibility:"visible","text-rotation-alignment":"viewport","text-anchor":"center","text-field":"{name}","text-letter-spacing":.02,"text-max-width":8},filter:["filter-==","indoor","room"],type:"symbol",source:"indoor",id:"poi-indoor-text-ref",paint:{"text-color":"#65513d","text-halo-color":"#ffffff","text-halo-width":1,"text-opacity":{base:1,stops:[[18,0],[18.5,.5],[19,1]]}}},{interactive:!0,minzoom:17,layout:{"text-line-height":1.2,"icon-size":{base:1,stops:[[17,.5],[20,1]]},"text-size":{base:1,stops:[[17,11],[20,13]]},"text-allow-overlap":!1,"icon-image":"{maki}-15","icon-anchor":"center","text-ignore-placement":!1,"text-max-angle":38,"symbol-spacing":250,"text-font":["DIN Offc Pro Medium","Arial Unicode MS Regular"],"symbol-placement":"point","text-padding":2,visibility:"visible","text-offset":[0,1],"icon-optional":!1,"text-rotation-alignment":"viewport","text-anchor":"top","text-field":"{name}","text-letter-spacing":.02,"text-max-width":8,"icon-allow-overlap":!0},filter:["boolean",!1],type:"symbol",source:"indoor",id:"poi-indoor",paint:{"text-color":"#65513d","text-halo-color":"#ffffff","text-halo-width":1,"text-opacity":{base:1,stops:[[17,0],[17.5,.5],[19,1]]},"icon-opacity":{base:1,stops:[[17,0],[17.5,.5],[19,1]]}}}];const c="poi-indoor",h=[{filter:["filter-==","amenity","fast_food"],maki:"fast-food"},{filter:["filter-==","amenity","restaurant"],maki:"restaurant"},{filter:["filter-==","amenity","cafe"],maki:"cafe"},{filter:["filter-==","amenity","bank"],maki:"bank"},{filter:["filter-==","amenity","toilets"],maki:"toilet"},{filter:["filter-==","shop","travel_agency"],maki:"suitcase"},{filter:["filter-==","shop","convenience"],maki:"grocery"},{filter:["filter-==","shop","bakery"],maki:"bakery"},{filter:["filter-==","shop","chemist"],maki:"pharmacy"},{filter:["filter-==","shop","clothes"],maki:"clothing-store"},{filter:["filter-==","highway","steps"],maki:"entrance"},{filter:["has","shop"],maki:"shop"}];const f=u.find(e=>e.id===c);var p;f&&((p=f,h.map(e=>{const t=Object.assign({},p);return t.id+="-"+e.maki,t.filter=e.filter,t.layout=Object.assign({},p.layout),t.layout["icon-image"]=e.maki+"-15",t})).forEach(e=>u.push(e)),u=u.filter(e=>e.id!==c));var m={DefaultLayers:u};function g(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function y(e,t,i){return e(i={path:t,exports:{},require:function(e,t){return function(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}(null==t&&i.path)}},i.exports),i.exports}var v=y((function(e,t){function i(e,t,i){void 0===i&&(i={});var o={type:"Feature"};return(0===i.id||i.id)&&(o.id=i.id),i.bbox&&(o.bbox=i.bbox),o.properties=t||{},o.geometry=e,o}function o(e,t,o){return void 0===o&&(o={}),i({type:"Point",coordinates:e},t,o)}function r(e,t,o){void 0===o&&(o={});for(var r=0,n=e;r<n.length;r++){var a=n[r];if(a.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var s=0;s<a[a.length-1].length;s++)if(a[a.length-1][s]!==a[0][s])throw new Error("First and last Position are not equivalent.")}return i({type:"Polygon",coordinates:e},t,o)}function n(e,t,o){if(void 0===o&&(o={}),e.length<2)throw new Error("coordinates must be an array of two or more positions");return i({type:"LineString",coordinates:e},t,o)}function a(e,t){void 0===t&&(t={});var i={type:"FeatureCollection"};return t.id&&(i.id=t.id),t.bbox&&(i.bbox=t.bbox),i.features=e,i}function s(e,t,o){return void 0===o&&(o={}),i({type:"MultiLineString",coordinates:e},t,o)}function l(e,t,o){return void 0===o&&(o={}),i({type:"MultiPoint",coordinates:e},t,o)}function d(e,t,o){return void 0===o&&(o={}),i({type:"MultiPolygon",coordinates:e},t,o)}function u(e,i){void 0===i&&(i="kilometers");var o=t.factors[i];if(!o)throw new Error(i+" units is invalid");return e*o}function c(e,i){void 0===i&&(i="kilometers");var o=t.factors[i];if(!o)throw new Error(i+" units is invalid");return e/o}function h(e){return 180*(e%(2*Math.PI))/Math.PI}function f(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)&&!/^\s*$/.test(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.earthRadius=6371008.8,t.factors={centimeters:100*t.earthRadius,centimetres:100*t.earthRadius,degrees:t.earthRadius/111325,feet:3.28084*t.earthRadius,inches:39.37*t.earthRadius,kilometers:t.earthRadius/1e3,kilometres:t.earthRadius/1e3,meters:t.earthRadius,metres:t.earthRadius,miles:t.earthRadius/1609.344,millimeters:1e3*t.earthRadius,millimetres:1e3*t.earthRadius,nauticalmiles:t.earthRadius/1852,radians:1,yards:t.earthRadius/1.0936},t.unitsFactors={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/t.earthRadius,yards:1/1.0936},t.areaFactors={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046},t.feature=i,t.geometry=function(e,t,i){switch(e){case"Point":return o(t).geometry;case"LineString":return n(t).geometry;case"Polygon":return r(t).geometry;case"MultiPoint":return l(t).geometry;case"MultiLineString":return s(t).geometry;case"MultiPolygon":return d(t).geometry;default:throw new Error(e+" is invalid")}},t.point=o,t.points=function(e,t,i){return void 0===i&&(i={}),a(e.map((function(e){return o(e,t)})),i)},t.polygon=r,t.polygons=function(e,t,i){return void 0===i&&(i={}),a(e.map((function(e){return r(e,t)})),i)},t.lineString=n,t.lineStrings=function(e,t,i){return void 0===i&&(i={}),a(e.map((function(e){return n(e,t)})),i)},t.featureCollection=a,t.multiLineString=s,t.multiPoint=l,t.multiPolygon=d,t.geometryCollection=function(e,t,o){return void 0===o&&(o={}),i({type:"GeometryCollection",geometries:e},t,o)},t.round=function(e,t){if(void 0===t&&(t=0),t&&!(t>=0))throw new Error("precision must be a positive number");var i=Math.pow(10,t||0);return Math.round(e*i)/i},t.radiansToLength=u,t.lengthToRadians=c,t.lengthToDegrees=function(e,t){return h(c(e,t))},t.bearingToAzimuth=function(e){var t=e%360;return t<0&&(t+=360),t},t.radiansToDegrees=h,t.degreesToRadians=function(e){return e%360*Math.PI/180},t.convertLength=function(e,t,i){if(void 0===t&&(t="kilometers"),void 0===i&&(i="kilometers"),!(e>=0))throw new Error("length must be a positive number");return u(c(e,t),i)},t.convertArea=function(e,i,o){if(void 0===i&&(i="meters"),void 0===o&&(o="kilometers"),!(e>=0))throw new Error("area must be a positive number");var r=t.areaFactors[i];if(!r)throw new Error("invalid original units");var n=t.areaFactors[o];if(!n)throw new Error("invalid final units");return e/r*n},t.isNumber=f,t.isObject=function(e){return!!e&&e.constructor===Object},t.validateBBox=function(e){if(!e)throw new Error("bbox is required");if(!Array.isArray(e))throw new Error("bbox must be an Array");if(4!==e.length&&6!==e.length)throw new Error("bbox must be an Array of 4 or 6 numbers");e.forEach((function(e){if(!f(e))throw new Error("bbox must only contain numbers")}))},t.validateId=function(e){if(!e)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof e))throw new Error("id must be a number or a string")},t.radians2degrees=function(){throw new Error("method has been renamed to `radiansToDegrees`")},t.degrees2radians=function(){throw new Error("method has been renamed to `degreesToRadians`")},t.distanceToDegrees=function(){throw new Error("method has been renamed to `lengthToDegrees`")},t.distanceToRadians=function(){throw new Error("method has been renamed to `lengthToRadians`")},t.radiansToDistance=function(){throw new Error("method has been renamed to `radiansToLength`")},t.bearingToAngle=function(){throw new Error("method has been renamed to `bearingToAzimuth`")},t.convertDistance=function(){throw new Error("method has been renamed to `convertLength`")}})),b=y((function(e,t){function i(e,t,o){if(null!==e)for(var r,n,a,s,l,d,u,c,h=0,f=0,p=e.type,m="FeatureCollection"===p,g="Feature"===p,y=m?e.features.length:1,v=0;v<y;v++){l=(c=!!(u=m?e.features[v].geometry:g?e.geometry:e)&&"GeometryCollection"===u.type)?u.geometries.length:1;for(var b=0;b<l;b++){var M=0,_=0;if(null!==(s=c?u.geometries[b]:u)){d=s.coordinates;var w=s.type;switch(h=!o||"Polygon"!==w&&"MultiPolygon"!==w?0:1,w){case null:break;case"Point":if(!1===t(d,f,v,M,_))return!1;f++,M++;break;case"LineString":case"MultiPoint":for(r=0;r<d.length;r++){if(!1===t(d[r],f,v,M,_))return!1;f++,"MultiPoint"===w&&M++}"LineString"===w&&M++;break;case"Polygon":case"MultiLineString":for(r=0;r<d.length;r++){for(n=0;n<d[r].length-h;n++){if(!1===t(d[r][n],f,v,M,_))return!1;f++}"MultiLineString"===w&&M++,"Polygon"===w&&_++}"Polygon"===w&&M++;break;case"MultiPolygon":for(r=0;r<d.length;r++){for(_=0,n=0;n<d[r].length;n++){for(a=0;a<d[r][n].length-h;a++){if(!1===t(d[r][n][a],f,v,M,_))return!1;f++}_++}M++}break;case"GeometryCollection":for(r=0;r<s.geometries.length;r++)if(!1===i(s.geometries[r],t,o))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function o(e,t){var i;switch(e.type){case"FeatureCollection":for(i=0;i<e.features.length&&!1!==t(e.features[i].properties,i);i++);break;case"Feature":t(e.properties,0)}}function r(e,t){if("Feature"===e.type)t(e,0);else if("FeatureCollection"===e.type)for(var i=0;i<e.features.length&&!1!==t(e.features[i],i);i++);}function n(e,t){var i,o,r,n,a,s,l,d,u,c,h=0,f="FeatureCollection"===e.type,p="Feature"===e.type,m=f?e.features.length:1;for(i=0;i<m;i++){for(s=f?e.features[i].geometry:p?e.geometry:e,d=f?e.features[i].properties:p?e.properties:{},u=f?e.features[i].bbox:p?e.bbox:void 0,c=f?e.features[i].id:p?e.id:void 0,a=(l=!!s&&"GeometryCollection"===s.type)?s.geometries.length:1,r=0;r<a;r++)if(null!==(n=l?s.geometries[r]:s))switch(n.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===t(n,h,d,u,c))return!1;break;case"GeometryCollection":for(o=0;o<n.geometries.length;o++)if(!1===t(n.geometries[o],h,d,u,c))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===t(null,h,d,u,c))return!1;h++}}function a(e,t){n(e,(function(e,i,o,r,n){var a,s=null===e?null:e.type;switch(s){case null:case"Point":case"LineString":case"Polygon":return!1!==t(v.feature(e,o,{bbox:r,id:n}),i,0)&&void 0}switch(s){case"MultiPoint":a="Point";break;case"MultiLineString":a="LineString";break;case"MultiPolygon":a="Polygon"}for(var l=0;l<e.coordinates.length;l++){var d={type:a,coordinates:e.coordinates[l]};if(!1===t(v.feature(d,o),i,l))return!1}}))}function s(e,t){a(e,(function(e,o,r){var n=0;if(e.geometry){var a=e.geometry.type;if("Point"!==a&&"MultiPoint"!==a){var s,l=0,d=0,u=0;return!1!==i(e,(function(i,a,c,h,f){if(void 0===s||o>l||h>d||f>u)return s=i,l=o,d=h,u=f,void(n=0);var p=v.lineString([s,i],e.properties);if(!1===t(p,o,r,f,n))return!1;n++,s=i}))&&void 0}}}))}function l(e,t){if(!e)throw new Error("geojson is required");a(e,(function(e,i,o){if(null!==e.geometry){var r=e.geometry.type,n=e.geometry.coordinates;switch(r){case"LineString":if(!1===t(e,i,o,0,0))return!1;break;case"Polygon":for(var a=0;a<n.length;a++)if(!1===t(v.lineString(n[a],e.properties),i,o,a))return!1}}}))}Object.defineProperty(t,"__esModule",{value:!0}),t.coordEach=i,t.coordReduce=function(e,t,o,r){var n=o;return i(e,(function(e,i,r,a,s){n=0===i&&void 0===o?e:t(n,e,i,r,a,s)}),r),n},t.propEach=o,t.propReduce=function(e,t,i){var r=i;return o(e,(function(e,o){r=0===o&&void 0===i?e:t(r,e,o)})),r},t.featureEach=r,t.featureReduce=function(e,t,i){var o=i;return r(e,(function(e,r){o=0===r&&void 0===i?e:t(o,e,r)})),o},t.coordAll=function(e){var t=[];return i(e,(function(e){t.push(e)})),t},t.geomEach=n,t.geomReduce=function(e,t,i){var o=i;return n(e,(function(e,r,n,a,s){o=0===r&&void 0===i?e:t(o,e,r,n,a,s)})),o},t.flattenEach=a,t.flattenReduce=function(e,t,i){var o=i;return a(e,(function(e,r,n){o=0===r&&0===n&&void 0===i?e:t(o,e,r,n)})),o},t.segmentEach=s,t.segmentReduce=function(e,t,i){var o=i,r=!1;return s(e,(function(e,n,a,s,l){o=!1===r&&void 0===i?e:t(o,e,n,a,s,l),r=!0})),o},t.lineEach=l,t.lineReduce=function(e,t,i){var o=i;return l(e,(function(e,r,n,a){o=0===r&&void 0===i?e:t(o,e,r,n,a)})),o},t.findSegment=function(e,t){if(t=t||{},!v.isObject(t))throw new Error("options is invalid");var i,o=t.featureIndex||0,r=t.multiFeatureIndex||0,n=t.geometryIndex||0,a=t.segmentIndex||0,s=t.properties;switch(e.type){case"FeatureCollection":o<0&&(o=e.features.length+o),s=s||e.features[o].properties,i=e.features[o].geometry;break;case"Feature":s=s||e.properties,i=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":i=e;break;default:throw new Error("geojson is invalid")}if(null===i)return null;var l=i.coordinates;switch(i.type){case"Point":case"MultiPoint":return null;case"LineString":return a<0&&(a=l.length+a-1),v.lineString([l[a],l[a+1]],s,t);case"Polygon":return n<0&&(n=l.length+n),a<0&&(a=l[n].length+a-1),v.lineString([l[n][a],l[n][a+1]],s,t);case"MultiLineString":return r<0&&(r=l.length+r),a<0&&(a=l[r].length+a-1),v.lineString([l[r][a],l[r][a+1]],s,t);case"MultiPolygon":return r<0&&(r=l.length+r),n<0&&(n=l[r].length+n),a<0&&(a=l[r][n].length-a-1),v.lineString([l[r][n][a],l[r][n][a+1]],s,t)}throw new Error("geojson is invalid")},t.findPoint=function(e,t){if(t=t||{},!v.isObject(t))throw new Error("options is invalid");var i,o=t.featureIndex||0,r=t.multiFeatureIndex||0,n=t.geometryIndex||0,a=t.coordIndex||0,s=t.properties;switch(e.type){case"FeatureCollection":o<0&&(o=e.features.length+o),s=s||e.features[o].properties,i=e.features[o].geometry;break;case"Feature":s=s||e.properties,i=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":i=e;break;default:throw new Error("geojson is invalid")}if(null===i)return null;var l=i.coordinates;switch(i.type){case"Point":return v.point(l,s,t);case"MultiPoint":return r<0&&(r=l.length+r),v.point(l[r],s,t);case"LineString":return a<0&&(a=l.length+a),v.point(l[a],s,t);case"Polygon":return n<0&&(n=l.length+n),a<0&&(a=l[n].length+a),v.point(l[n][a],s,t);case"MultiLineString":return r<0&&(r=l.length+r),a<0&&(a=l[r].length+a),v.point(l[r][a],s,t);case"MultiPolygon":return r<0&&(r=l.length+r),n<0&&(n=l[r].length+n),a<0&&(a=l[r][n].length-a),v.point(l[r][n][a],s,t)}throw new Error("geojson is invalid")}})),M=g(y((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=[1/0,1/0,-1/0,-1/0];return b.coordEach(e,(function(e){t[0]>e[0]&&(t[0]=e[0]),t[1]>e[1]&&(t[1]=e[1]),t[2]<e[0]&&(t[2]=e[0]),t[3]<e[1]&&(t[3]=e[1])})),t}})));class _{static fromGeojson(e,i={}){const{bounds:o,levelsRange:r}=class{static extractLevelFromFeature(e){if(e.properties&&null!==e.properties.level){const t=e.properties.level;if("string"==typeof t){const e=t.split(";");if(1===e.length){const e=parseFloat(t);if(!isNaN(e))return e}else if(2===e.length){const t=parseFloat(e[0]),i=parseFloat(e[1]);if(!isNaN(t)&&!isNaN(i))return{min:Math.min(t,i),max:Math.max(t,i)}}}}return null}static extractLevelsRangeAndBounds(e){let i=1/0,o=-1/0;const r=M(e).slice(0,4),n=new t.LngLatBounds(r),a=e=>{const t=this.extractLevelFromFeature(e);null!==t&&("number"==typeof t?(i=Math.min(i,t),o=Math.max(o,t)):"object"==typeof t&&(i=Math.min(i,t.min),o=Math.max(o,t.max)))};if("FeatureCollection"===e.type?e.features.forEach(a):"Feature"===e.type&&a(e),i===1/0||o===-1/0)throw new Error("No level found");return{levelsRange:{min:i,max:o},bounds:n}}}.extractLevelsRangeAndBounds(e),n=new _;return n.geojson=e,n.layers=i.layers?i.layers:m.DefaultLayers,n.bounds=o,n.levelsRange=r,n.layersToHide=i.layersToHide?i.layersToHide:[],n.beforeLayerId=i.beforeLayerId,n.defaultLevel=i.defaultLevel?i.defaultLevel:0,n.showFeaturesWithEmptyLevel=!!i.showFeaturesWithEmptyLevel&&i.showFeaturesWithEmptyLevel,n}}class w{constructor(e,i,o){this.loadMapsPromise=Promise.resolve(),this.loadMapsIfNecessary=async()=>{if(this.map.getZoom()<17)return;const e=this.map.getBounds();if(null!==this.downloadedBounds&&this.downloadedBounds.contains(e.getNorthEast())&&this.downloadedBounds.contains(e.getSouthWest()))return;const i=s(e.getNorthEast(),e.getNorthWest()),o=s(e.getNorthEast(),e.getSouthEast()),r=Math.max(i,o),n=Math.max(1e3,2*r),l=this.map.getCenter(),d=n*Math.sqrt(2),u=a(l,d,Math.PI/4),c=a(l,d,-3*Math.PI/4),h=new t.LngLatBounds(c,u);this.downloadedBounds=h,await this.loadMapsPromise,this.loadMapsPromise=this.loadMapsInBounds(h)},this.loadMapsInBounds=async e=>{const t=this.serverUrl+`/maps-in-bounds/${e.getWest()},${e.getSouth()},${e.getEast()},${e.getNorth()}`,i=await(await fetch(t)).json(),o=this.remoteMapsDownloaded.reduce((e,t)=>(i.find(e=>e.path===t.path)||e.push(t),e),[]);i.reduce((e,t)=>(this.remoteMapsDownloaded.find(e=>e.path===t.path)||e.push(t),e),[]).forEach(this.addCustomMap),o.forEach(this.removeCustomMap)},this.addCustomMap=async e=>{const t=await(await fetch(this.serverUrl+e.path)).json();e.indoorMap=_.fromGeojson(t,this.indoorMapOptions),this.map.indoor.addMap(e.indoorMap),this.remoteMapsDownloaded.push(e)},this.removeCustomMap=async e=>{this.map.indoor.removeMap(e.indoorMap),this.remoteMapsDownloaded.splice(this.remoteMapsDownloaded.indexOf(e),1)},this.serverUrl=e,this.map=i,this.indoorMapOptions=o,this.remoteMapsDownloaded=[],this.downloadedBounds=null,i.loaded?this.loadMapsIfNecessary():i.on("load",()=>this.loadMapsIfNecessary()),i.on("move",()=>this.loadMapsIfNecessary())}static manage(e,t,i){return new w(e,t,i)}}Object.defineProperty(o.default.Map.prototype,"indoor",{get:function(){return this._indoor||(this._indoor=new d(this)),this._indoor}}),e.DefaultStyle=m,e.IndoorMap=_,e.MapServerHandler=w,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=map-gl-indoor.umd.min.js.map
