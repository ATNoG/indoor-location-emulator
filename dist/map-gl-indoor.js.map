{"version":3,"file":"map-gl-indoor.js","sources":["../src/IndoorControl.ts","../src/Utils.ts","../src/Indoor.ts","../src/style/DefaultLayers.ts","../src/style/index.ts","../src/GeojsonHelper.ts","../src/IndoorMap.ts","../src/MapServerHandler.ts","../src/index.ts"],"sourcesContent":["import Indoor from './Indoor';\nimport IndoorMap from './IndoorMap';\n\nimport type { Map } from 'mapbox-gl';\nimport type { Level } from './types';\n\n/**\n * Creates a indoor control with floors buttons\n\n * @implements {IControl}\n */\nclass IndoorControl {\n\n    _indoor: Indoor;\n    _map: Map;\n    _indoorMap: IndoorMap | null;\n\n    _container: HTMLElement | null;\n    _levelsButtons: Array<HTMLElement>;\n    _selectedButton: HTMLElement | null;\n\n    constructor(indoor: Indoor) {\n        this._indoor = indoor;\n        this._levelsButtons = [];\n        this._container = null;\n        this._selectedButton = null;\n    }\n\n    onAdd(map: Map) {\n        this._map = map;\n\n        // Create container\n        this._container = document.createElement(\"div\");\n        this._container.classList.add(\"mapboxgl-ctrl\");\n        this._container.classList.add(\"mapboxgl-ctrl-group\");\n        this._container.style.display = 'none';\n        this._container.addEventListener('contextmenu', this._onContextMenu);\n\n        // If indoor layer is already loaded, update levels\n        this._indoorMap = this._indoor.getSelectedMap();\n        if (this._indoor.getSelectedMap() !== null) {\n            this._updateNavigationBar()\n            this._setSelected(this._indoor.getLevel());\n        }\n\n        // Register to indoor events\n        this._map.on('indoor.map.loaded', this._onMapLoaded);\n        this._map.on('indoor.map.unloaded', this._onMapUnLoaded);\n        this._map.on('indoor.level.changed', this._onLevelChanged);\n\n        return this._container;\n    }\n\n    onRemove() {\n        this._container.remove();\n        this._container = null;\n        this._map.off('indoor.map.loaded', this._onMapLoaded);\n        this._map.off('indoor.map.unloaded', this._onMapUnLoaded);\n        this._map.off('indoor.level.changed', this._onLevelChanged);\n    }\n\n    _onMapLoaded = ({ indoorMap }: { indoorMap: IndoorMap }): void => {\n        this._indoorMap = indoorMap;\n        this._updateNavigationBar();\n        this._setSelected(this._indoor.getLevel());\n    }\n\n    _onMapUnLoaded = (): void => {\n        this._indoorMap = null;\n        this._updateNavigationBar();\n    }\n\n    _onLevelChanged = ({ level }: { level: Level | null }): void => this._setSelected(level);\n\n    _updateNavigationBar() {\n\n        if (this._container === null) {\n            return;\n        }\n\n        if (this._indoorMap === null) {\n            this._container.style.display = 'none';\n            return;\n        }\n\n        this._container.style.display = 'block';\n\n        this._levelsButtons = [];\n        while (this._container.firstChild) {\n            this._container.removeChild(this._container.firstChild);\n        }\n\n        const range = this._indoorMap.levelsRange;\n        for (let i = range.max; i >= range.min; i--) {\n            this._levelsButtons[i] = this._createLevelButton(this._container, i);\n        }\n    }\n\n    _setSelected(level: Level | null) {\n\n        if (this._levelsButtons.length === 0) {\n            return;\n        }\n\n        if (this._selectedButton) {\n            this._selectedButton.style.fontWeight = \"normal\";\n        }\n        if (level !== null && this._levelsButtons[level]) {\n            this._levelsButtons[level].style.fontWeight = \"bold\";\n            this._selectedButton = this._levelsButtons[level];\n        }\n    }\n\n    _createLevelButton(container: HTMLElement, level: Level) {\n        const a = document.createElement(\"button\");\n        a.innerHTML = level.toString();\n        a.classList.add(\"mapboxgl-ctrl-icon\");\n        container.appendChild(a);\n        a.addEventListener('click', () => {\n            this._map.fire('indoor.control.clicked', { level });\n            if (this._indoor.getLevel() === level) return;\n            this._indoor.setLevel(level);\n        });\n        return a;\n    }\n\n    _onContextMenu(e: Event) {\n        e.preventDefault();\n    }\n\n}\n\nexport default IndoorControl;\n","import { LngLat, LngLatBounds } from 'mapbox-gl';\n\nimport type { FilterSpecification, Level } from './types';\n\nexport const EarthRadius = 6371008.8;\n\nexport function overlap(bounds1: LngLatBounds, bounds2: LngLatBounds) {\n\n    // If one rectangle is on left side of other\n    if (bounds1.getWest() > bounds2.getEast() || bounds2.getWest() > bounds1.getEast()) {\n        return false;\n    }\n\n    // If one rectangle is above other\n    if (bounds1.getNorth() < bounds2.getSouth() || bounds2.getNorth() < bounds1.getSouth()) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function filterWithLevel(initialFilter: FilterSpecification, level: Level, showFeaturesWithEmptyLevel: boolean = false): any {\n    return [\n        \"all\",\n        initialFilter,\n        [\n            'any',\n            showFeaturesWithEmptyLevel ? [\"!\", [\"has\", \"level\"]] : false,\n            [\n                'all',\n                [\n                    \"has\",\n                    \"level\"\n                ],\n                [\n                    \"any\",\n                    [\n                        \"==\",\n                        [\"get\", \"level\"],\n                        level.toString()\n                    ],\n                    [\n                        \"all\",\n                        [\n                            \"!=\",\n                            [\n                                \"index-of\",\n                                \";\",\n                                [\"get\", \"level\"]\n                            ],\n                            -1,\n                        ],\n                        [\n                            \">=\",\n                            level,\n                            [\n                                \"to-number\",\n                                [\n                                    \"slice\",\n                                    [\"get\", \"level\"],\n                                    0,\n                                    [\n                                        \"index-of\",\n                                        \";\",\n                                        [\"get\", \"level\"]\n                                    ]\n                                ]\n                            ]\n                        ],\n                        [\n                            \"<=\",\n                            level,\n                            [\n                                \"to-number\",\n                                [\n                                    \"slice\",\n                                    [\"get\", \"level\"],\n                                    [\n                                        \"+\",\n                                        [\n                                            \"index-of\",\n                                            \";\",\n                                            [\"get\", \"level\"]\n                                        ],\n                                        1\n                                    ]\n                                ]\n                            ]\n                        ]\n                    ]\n                ]\n            ]\n        ]\n    ];\n}\n\n\nexport function destinationPoint(start: LngLat, distance: number, bearing: number) : LngLat {\n    const dR = distance / EarthRadius;\n    const cosDr = Math.cos(dR);\n    const sinDr = Math.sin(dR);\n\n    const phi1 = start.lat / 180 * Math.PI;\n    const lambda1 = start.lng / 180 * Math.PI;\n\n    const phi2 = Math.asin( Math.sin(phi1) * cosDr\n        + Math.cos(phi1) * sinDr * Math.cos(bearing)\n    );\n    const lambda2 = lambda1 + Math.atan2(\n        Math.sin(bearing) * sinDr * Math.cos(phi1),\n        cosDr - Math.sin(phi1) * Math.sin(phi2)\n    );\n\n    return new LngLat(lambda2 * 180 / Math.PI, phi2 * 180 / Math.PI);\n}\n\nexport function distance(point1: LngLat, point2: LngLat) : number {\n\n    const lat1 = point1.lat / 180 * Math.PI;\n    const lng1 = point1.lng / 180 * Math.PI;\n\n    const lat2 = point2.lat / 180 * Math.PI;\n    const lng2 = point2.lng / 180 * Math.PI;\n\n    const dlat = lat2 - lat1;\n    const dlng = lng2 - lng1;\n\n    const angle = Math.sin(dlat / 2) ** 2 + Math.cos(lat1) * Math.cos(lat2) * Math.sin(dlng / 2) ** 2;\n\n    const tangy = Math.sqrt(angle);\n    const tangx = Math.sqrt(1 - angle);\n    const cosn = 2 * Math.atan2(tangy, tangx);\n\n    return EarthRadius * cosn;\n}\n","import IndoorMap from './IndoorMap';\nimport IndoorControl from './IndoorControl';\nimport { overlap, filterWithLevel, distance } from './Utils';\n\ntype SavedFilter = {\n    layerId: string,\n    filter: FilterSpecification\n}\n\nimport type { Map } from 'mapbox-gl';\nimport type { Level, FilterSpecification, LayerSpecification } from './types';\n\nconst SOURCE_ID = 'indoor';\n\n/**\n * Manage indoor levels\n * @param {Map} map the Mapbox map\n */\nclass Indoor {\n\n    _map: Map;\n    _level: Level | null;\n\n    _indoorMaps: Array<IndoorMap>;\n    _selectedMap: IndoorMap | null;\n    _previousSelectedMap: IndoorMap | null;\n    _previousSelectedLevel: Level | null;\n\n    _savedFilters: Array<SavedFilter>;\n    _mapLoaded: boolean;\n\n    _control: IndoorControl;\n\n    _updateMapPromise: Promise<void>;\n\n    constructor(map: Map) {\n        this._map = map;\n        this._level = null;\n\n        this._indoorMaps = [];\n        this._savedFilters = [];\n        this._selectedMap = null;\n        this._previousSelectedMap = null;\n        this._previousSelectedLevel = null;\n        this._mapLoaded = false;\n        this._updateMapPromise = Promise.resolve();\n\n        this._control = new IndoorControl(this);\n\n        if (this._map.loaded()) {\n            this._mapLoaded = true;\n        } else {\n            this._map.on('load', () => {\n                this._mapLoaded = true;\n                this._updateSelectedMapIfNeeded();\n            });\n        }\n\n        this._map.on('moveend', () => this._updateSelectedMapIfNeeded());\n    }\n\n    getSelectedMap(): IndoorMap | null {\n        return this._selectedMap;\n    }\n\n    getLevel(): Level | null {\n        return this._level;\n    }\n\n    setLevel(level: Level | null, fireEvent: Boolean = true): void {\n\n        if (this._selectedMap === null) {\n            throw new Error('Cannot set level, no map has been selected');\n        }\n\n        this._level = level;\n        this._updateFiltering();\n        if (fireEvent) {\n            this._map.fire('indoor.level.changed', { level });\n        }\n    }\n\n    get control(): IndoorControl {\n        return this._control;\n    }\n\n    /**\n     * ***********************\n     * Handle level change\n     * ***********************\n     */\n\n    _addLayerForFiltering(layer: LayerSpecification, beforeLayerId?: string) {\n        this._map.addLayer(layer, beforeLayerId);\n        this._savedFilters.push({\n            layerId: layer.id,\n            filter: this._map.getFilter(layer.id) || [\"all\"]\n        });\n    }\n\n    _removeLayerForFiltering(layerId: string) {\n        this._savedFilters = this._savedFilters.filter(({ layerId: id }) => layerId !== id);\n        this._map.removeLayer(layerId);\n    }\n\n    _updateFiltering() {\n        const level = this._level;\n\n        let filterFn: (filter: FilterSpecification) => FilterSpecification;\n        if (level !== null) {\n            const showFeaturesWithEmptyLevel = this._selectedMap ? this._selectedMap.showFeaturesWithEmptyLevel : false;\n            filterFn = (filter: FilterSpecification) => filterWithLevel(filter, level, showFeaturesWithEmptyLevel);\n        } else {\n            filterFn = (filter: FilterSpecification): FilterSpecification => filter;\n        }\n\n        this._savedFilters.forEach(({ layerId, filter }) => this._map.setFilter(layerId, filterFn(filter)));\n    }\n\n\n\n    /**\n     * **************\n     * Handle maps\n     * **************\n     */\n\n    addMap(map: IndoorMap) {\n        this._indoorMaps.push(map);\n        this._updateSelectedMapIfNeeded();\n    }\n\n    removeMap(map: IndoorMap) {\n        this._indoorMaps = this._indoorMaps.filter(_indoorMap => _indoorMap !== map);\n        this._updateSelectedMapIfNeeded();\n    }\n\n\n    async _updateSelectedMapIfNeeded() {\n\n        if (!this._mapLoaded) {\n            return;\n        }\n\n        // Avoid to call \"closestMap\" or \"updateSelectedMap\" if the previous call is not finished yet\n        await this._updateMapPromise;\n        this._updateMapPromise = (async () => {\n            const closestMap = this._closestMap();\n            if (closestMap !== this._selectedMap) {\n                this._updateSelectedMap(closestMap);\n            }\n        })();\n    }\n\n    _updateSelectedMap(indoorMap: IndoorMap | null) {\n\n        const previousMap = this._selectedMap;\n\n        // Remove the previous selected map if it exists\n        if (previousMap !== null) {\n            previousMap.layersToHide.forEach(layerId => this._map.setLayoutProperty(layerId, 'visibility', 'visible'));\n            previousMap.layers.forEach(({ id }) => this._removeLayerForFiltering(id));\n            this._map.removeSource(SOURCE_ID);\n\n            if (!indoorMap) {\n                // Save the previous map level.\n                // It enables the user to exit and re-enter, keeping the same level shown.\n                this._previousSelectedLevel = this._level;\n                this._previousSelectedMap = previousMap;\n            }\n\n            this.setLevel(null, false);\n            this._map.fire('indoor.map.unloaded', { indoorMap: previousMap });\n        }\n\n        this._selectedMap = indoorMap;\n        if (!indoorMap) {\n            return;\n        }\n\n        const { geojson, layers, levelsRange, beforeLayerId } = indoorMap;\n\n        // Add map source\n        this._map.addSource(SOURCE_ID, {\n            type: \"geojson\",\n            data: geojson\n        });\n\n        // Add layers and save filters\n        layers.forEach(layer => this._addLayerForFiltering(layer, beforeLayerId));\n\n        // Hide layers which can overlap for rendering\n        indoorMap.layersToHide.forEach(layerId => this._map.setLayoutProperty(layerId, 'visibility', 'none'));\n\n        // Restore the same level when the previous selected map is the same.\n        const level = this._previousSelectedMap === indoorMap\n            ? this._previousSelectedLevel\n            : Math.max(Math.min(indoorMap.defaultLevel, levelsRange.max), levelsRange.min)\n\n        this.setLevel(level, false);\n\n        this._map.fire('indoor.map.loaded', { indoorMap });\n    }\n\n    _closestMap() {\n\n        // TODO enhance this condition\n        if (this._map.getZoom() < 17) {\n            return null;\n        }\n\n        const cameraBounds = this._map.getBounds();\n        const mapsInBounds = this._indoorMaps.filter(indoorMap =>\n            overlap(indoorMap.bounds, cameraBounds)\n        );\n\n        if (mapsInBounds.length === 0) {\n            return null;\n        }\n\n        if (mapsInBounds.length === 1) {\n            return mapsInBounds[0];\n        }\n\n        /*\n         * If there is multiple maps at this step, select the closest\n         */\n        let minDist = Number.POSITIVE_INFINITY;\n        let closestMap = mapsInBounds[0];\n        for (const map of mapsInBounds) {\n            const _dist = distance(map.bounds.getCenter(), cameraBounds.getCenter());\n            if (_dist < minDist) {\n                closestMap = map;\n                minDist = _dist;\n            }\n        }\n        return closestMap;\n    }\n\n}\n\nexport default Indoor;\n\n","import defaultLayers from './default_layers.json';\n\nimport type { LayerSpecification } from '../types';\n\nlet layers: Array<LayerSpecification> = defaultLayers;\n\n/**\n * Transform the generic \"poi-indoor\" layer into multiple layers using filters based on OSM tags\n */\n\nconst POI_LAYER_ID = \"poi-indoor\";\n\nconst OSM_FILTER_MAPBOX_MAKI_LIST = [\n    {\n        filter: ['filter-==', 'amenity', 'fast_food'],\n        maki: 'fast-food'\n    },\n    {\n        filter: ['filter-==', 'amenity', 'restaurant'],\n        maki: 'restaurant'\n    },\n    {\n        filter: ['filter-==', 'amenity', 'cafe'],\n        maki: 'cafe'\n    },\n    {\n        filter: ['filter-==', 'amenity', 'bank'],\n        maki: 'bank'\n    },\n    {\n        filter: ['filter-==', 'amenity', 'toilets'],\n        maki: 'toilet'\n    },\n    {\n        filter: ['filter-==', 'shop', 'travel_agency'],\n        maki: 'suitcase'\n    },\n    {\n        filter: ['filter-==', 'shop', 'convenience'],\n        maki: 'grocery'\n    },\n    {\n        filter: ['filter-==', 'shop', 'bakery'],\n        maki: 'bakery'\n    },\n    {\n        filter: ['filter-==', 'shop', 'chemist'],\n        maki: 'pharmacy'\n    },\n    {\n        filter: ['filter-==', 'shop', 'clothes'],\n        maki: 'clothing-store'\n    },\n    {\n        filter: ['filter-==', 'highway', 'steps'],\n        maki: 'entrance'\n    },\n    {\n        filter: ['has', 'shop'],\n        maki: 'shop'\n    }\n];\n\nfunction createPoiLayers(metaLayer: LayerSpecification): Array<LayerSpecification> {\n    return OSM_FILTER_MAPBOX_MAKI_LIST.map(poi => {\n        const newLayer = Object.assign({}, metaLayer);\n        newLayer.id += `-${poi.maki}`;\n        newLayer.filter = poi.filter;\n        newLayer.layout = Object.assign({}, metaLayer.layout);\n        newLayer.layout['icon-image'] = `${poi.maki}-15`;\n        return newLayer;\n    });\n}\n\nconst poiLayer = layers.find(layer => layer.id === POI_LAYER_ID);\nif (poiLayer) {\n    // Convert poi-indoor layer into several poi-layers\n    createPoiLayers(poiLayer).forEach(_layer => layers.push(_layer));\n    layers = layers.filter(layer => layer.id !== POI_LAYER_ID);\n}\n\nexport default layers;\n","import DefaultLayers from './DefaultLayers';\n\nexport default { DefaultLayers };\n","import { LngLatBounds } from 'mapbox-gl';\nimport bbox from '@turf/bbox';\n\nimport type { Feature, GeoJSON } from 'geojson';\nimport type { LevelsRange } from './types';\n\n/**\n * Helper for Geojson data\n */\nclass GeoJsonHelper {\n\n    /**\n     * Extract level from feature\n     *\n     * @param {GeoJSONFeature} feature geojson feature\n     * @returns {LevelsRange | number | null} the level or the range of level.\n     */\n    static extractLevelFromFeature(feature: Feature): (LevelsRange | number | null) {\n        if (!!feature.properties &&\n            feature.properties.level !== null) {\n            const propertyLevel = feature.properties['level'];\n            if (typeof propertyLevel === 'string') {\n                const splitLevel = propertyLevel.split(';');\n                if (splitLevel.length === 1) {\n                    const level = parseFloat(propertyLevel);\n                    if (!isNaN(level)) {\n                        return level;\n                    }\n                } else if (splitLevel.length === 2) {\n                    const level1 = parseFloat(splitLevel[0]);\n                    const level2 = parseFloat(splitLevel[1]);\n                    if (!isNaN(level1) && !isNaN(level2)) {\n                        return {\n                            min: Math.min(level1, level2),\n                            max: Math.max(level1, level2)\n                        };\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Extract levels range and bounds from geojson\n     *\n     * @param {GeoJSON} geojson the geojson\n     * @returns {Object} the levels range and bounds.\n     */\n    static extractLevelsRangeAndBounds(geojson: GeoJSON): ({ levelsRange: LevelsRange, bounds: LngLatBounds }) {\n\n        let minLevel = Infinity;\n        let maxLevel = -Infinity;\n\n        const boundsFromTurf = <[number, number, number, number]>bbox(geojson).slice(0, 4);\n        const bounds = new LngLatBounds(boundsFromTurf);\n\n        const parseFeature = (feature: Feature): void => {\n            const level = this.extractLevelFromFeature(feature);\n            if (level === null) {\n                return;\n            }\n            if (typeof level === 'number') {\n                minLevel = Math.min(minLevel, level);\n                maxLevel = Math.max(maxLevel, level);\n            } else if (typeof level === 'object') {\n                minLevel = Math.min(minLevel, level.min);\n                maxLevel = Math.max(maxLevel, level.max);\n            }\n        };\n\n        if (geojson.type === 'FeatureCollection') {\n            geojson.features.forEach(parseFeature);\n        } else if (geojson.type === 'Feature') {\n            parseFeature(geojson);\n        }\n\n        if (minLevel === Infinity || maxLevel === -Infinity) {\n            throw new Error('No level found');\n        }\n        return {\n            levelsRange: { min: minLevel, max: maxLevel },\n            bounds\n        };\n    }\n}\nexport default GeoJsonHelper;\n","import Style from './style';\nimport GeoJsonHelper from './GeojsonHelper';\n\nimport type { GeoJSON } from 'geojson';\n\nimport type { LevelsRange, IndoorMapOptions, LayerSpecification } from './types';\nimport type { LngLatBounds } from 'mapbox-gl';\n\nclass IndoorMap {\n\n    bounds: LngLatBounds;\n    geojson: any;\n    layers: Array<LayerSpecification>;\n    levelsRange: LevelsRange;\n    beforeLayerId?: string;\n    layersToHide: Array<string>;\n    defaultLevel: number;\n    showFeaturesWithEmptyLevel: boolean;\n\n    static fromGeojson(geojson: GeoJSON, options: IndoorMapOptions = {}) {\n\n        const { bounds, levelsRange } = GeoJsonHelper.extractLevelsRangeAndBounds(geojson);\n\n        const map = new IndoorMap();\n        map.geojson = geojson;\n        map.layers = options.layers ? options.layers : Style.DefaultLayers;\n        map.bounds = bounds;\n        map.levelsRange = levelsRange;\n        map.layersToHide = options.layersToHide ? options.layersToHide : [];\n        map.beforeLayerId = options.beforeLayerId;\n        map.defaultLevel = options.defaultLevel ? options.defaultLevel : 0;\n        map.showFeaturesWithEmptyLevel = options.showFeaturesWithEmptyLevel ? options.showFeaturesWithEmptyLevel : false;\n\n        return map;\n    }\n\n}\n\nexport default IndoorMap;\n","import { LngLatBounds } from 'mapbox-gl';\n\nimport IndoorMap from './IndoorMap';\nimport { destinationPoint, distance } from './Utils';\n\nimport type { Map as MapboxMap } from 'mapbox-gl';\nimport type Indoor from './Indoor';\nimport type { IndoorMapOptions } from './types';\n\ntype Map = MapboxMap & {\n    indoor?: Indoor\n};\n\ntype RemoteMap = {\n    name: string,\n    path: string,\n    indoorMap?: IndoorMap\n}\n\nconst MIN_ZOOM_TO_DOWNLOAD = 17;\nconst AREA_TO_DOWNLOAD = 1000; // in terms of distance from user\n\nclass MapServerHandler {\n\n    serverUrl: string;\n\n    map: Map;\n    remoteMapsDownloaded: RemoteMap[];\n    downloadedBounds: LngLatBounds | null;\n\n    loadMapsPromise: Promise<void> = Promise.resolve();\n\n    indoorMapOptions: IndoorMapOptions;\n\n    private constructor(serverUrl: string, map: Map, indoorMapOptions? : IndoorMapOptions) {\n        this.serverUrl = serverUrl;\n        this.map = map;\n        this.indoorMapOptions = indoorMapOptions;\n        this.remoteMapsDownloaded = [];\n        this.downloadedBounds = null;\n\n        if (map.loaded) {\n            this.loadMapsIfNecessary();\n        } else {\n            map.on('load', () => this.loadMapsIfNecessary())\n        }\n        map.on('move', () => this.loadMapsIfNecessary());\n    }\n\n    private loadMapsIfNecessary = async () => {\n\n        if (this.map.getZoom() < MIN_ZOOM_TO_DOWNLOAD) {\n            return;\n        }\n\n        const viewPort = this.map.getBounds();\n        if (this.downloadedBounds !== null) {\n            if (this.downloadedBounds.contains(viewPort.getNorthEast()) &&\n                this.downloadedBounds.contains(viewPort.getSouthWest())) {\n                // Maps of the viewport have already been downloaded.\n                return;\n            }\n        }\n\n        const distanceEastWest = distance(viewPort.getNorthEast(), viewPort.getNorthWest());\n        const distanceNorthSouth = distance(viewPort.getNorthEast(), viewPort.getSouthEast());\n        // It is not necessary to compute others as we are at zoom >= 17, the approximation is enough.\n        const maxDistanceOnScreen = Math.max(distanceEastWest, distanceNorthSouth);\n        const bestSizeOfAreaToDownload = Math.max(AREA_TO_DOWNLOAD, maxDistanceOnScreen * 2);\n\n        const center = this.map.getCenter();\n        const dist = bestSizeOfAreaToDownload * Math.sqrt(2);\n        const northEast = destinationPoint(center, dist, Math.PI / 4);\n        const southWest = destinationPoint(center, dist, - 3 * Math.PI / 4);\n        const boundsToDownload = new LngLatBounds(southWest, northEast);\n\n        // TODO: I put this here because fetch is async and takes more time than the next call to loadMapsIfNecessary.\n        this.downloadedBounds = boundsToDownload;\n\n        await this.loadMapsPromise;\n        this.loadMapsPromise = this.loadMapsInBounds(boundsToDownload);\n    }\n\n    private loadMapsInBounds = async (bounds: LngLatBounds) => {\n        const url = this.serverUrl + `/maps-in-bounds/${bounds.getWest()},${bounds.getSouth()},${bounds.getEast()},${bounds.getNorth()}`;\n        const maps = await (await fetch(url)).json();\n\n        const mapsToRemove = this.remoteMapsDownloaded.reduce((acc, map) => {\n            if (!maps.find(_map => _map.path === map.path)) {\n                acc.push(map);\n            }\n            return acc;\n        }, []);\n\n        const mapsToAdd = maps.reduce((acc, map) => {\n            if (!this.remoteMapsDownloaded.find(_map => _map.path === map.path)) {\n                acc.push(map);\n            }\n            return acc;\n        }, []);\n\n        mapsToAdd.forEach(this.addCustomMap);\n        mapsToRemove.forEach(this.removeCustomMap);\n    };\n\n    private addCustomMap = async (map: RemoteMap) => {\n        const geojson = await (await fetch(this.serverUrl + map.path)).json();\n        map.indoorMap = IndoorMap.fromGeojson(geojson, this.indoorMapOptions);\n        this.map.indoor.addMap(map.indoorMap);\n        this.remoteMapsDownloaded.push(map);\n    };\n\n    private removeCustomMap = async (map: RemoteMap) => {\n        this.map.indoor.removeMap(map.indoorMap);\n        this.remoteMapsDownloaded.splice(this.remoteMapsDownloaded.indexOf(map), 1);\n    }\n\n\n    static manage(server: string, map: Map, indoorMapOptions?: IndoorMapOptions) {\n        return new MapServerHandler(server, map, indoorMapOptions);\n    }\n\n}\n\nexport default MapServerHandler;\n","import mapboxgl from 'mapbox-gl';\n\nimport Indoor from './Indoor';\nimport IndoorMap from './IndoorMap';\nimport MapServerHandler from './MapServerHandler';\nimport DefaultStyle from './style';\n\nObject.defineProperty(\n    mapboxgl.Map.prototype,\n    'indoor',\n    {\n        get: function () {\n            if (!this._indoor) {\n                this._indoor = new Indoor(this);\n            }\n            return this._indoor;\n        }\n    });\n\n\nexport { IndoorMap, MapServerHandler, DefaultStyle };\n"],"names":["LngLat","bbox","LngLatBounds","mapboxgl"],"mappings":"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"}